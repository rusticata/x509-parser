name: Continuous integration

on:
  push:
  pull_request:
  merge_group:
  schedule:
    - cron: '0 18 * * *'

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.63.0
          - nightly
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cargo update
        run: cargo update
      - name: Cargo update (fix for MSRV)
        run: cargo update -p time --precise 0.3.20
        if: matrix.rust == '1.63.0'
      - uses: actions-rs/cargo@v1
        with:
          command: check

  check-all-features:
    name: Check All Features
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - 1.63.0
          - nightly
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
      - name: Cargo update
        run: cargo update
      - name: Cargo update (fix for MSRV)
        run: cargo update -p time --precise 0.3.20
        if: matrix.rust == '1.63.0'
      - uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all-targets --all-features

  test:
    name: Test Suite
    needs: check-all-features
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all-features

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    needs: check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-features -- -D warnings

  doc:
    name: Build documentation
    needs: check
    runs-on: ubuntu-latest
    env:
      RUSTDOCFLAGS: --cfg docsrs
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - uses: actions-rs/cargo@v1
        with:
          command: doc
          args: --workspace --no-deps --all-features
